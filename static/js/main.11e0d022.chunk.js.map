{"version":3,"sources":["components/PlayerDisplay.js","components/Scoreboard.js","components/Header.js","components/GameSquare.js","components/Gameboard.js","components/FormInput.js","components/Button.js","components/GameForm.js","components/GameReset.js","components/ControlBoard.js","squareData.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["PlayerDisplay","currentPlayer","player","position","className","Scoreboard","gameWinner","playerOneScore","playerTwoScore","Header","GameSquare","onClick","id","value","undefined","square_id","Gameboard","boardData","gameOver","setBoardData","setCurrentPlayer","startGame","useEffect","checkForWinner","forEach","square","valueOne","valueTwo","valueThree","checkForTieGame","every","placeMarker","updateValue","map","buildSquares","FormInput","labelText","placeholder","setPlayer","type","onChange","event","target","required","Button","text","GameForm","playerOne","playerTwo","setPlayerOne","setPlayerTwo","setShowForm","setShowGameReset","setStartGame","onSubmit","preventDefault","GameReset","resetBoardData","resetScores","setGameWinner","ControlBoard","useState","showForm","showGameReset","squareData","Main","updateScore","Footer","address","name","href","rel","App","setPlayerOneScore","setPlayerTwoScore","winner","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11e0d022.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/PlayerDisplay.css';\n\nconst PlayerDisplay = ({ currentPlayer, player, position }) => {\n    return (\n        <div className={`playerDisplay ${currentPlayer ? `${position}Highlight` : ''} ${position}`}>\n            <p>{player}</p>\n        </div>\n    );\n}\n\nexport default PlayerDisplay;","import React from 'react';\nimport '../styles/Scoreboard.css';\n\nconst Scoreboard = ({ gameWinner, playerOneScore, playerTwoScore }) => {\n    return (\n        <div className='scoreboard'>\n            <div className='scores'>\n                <h3>{playerOneScore} | {playerTwoScore}</h3>\n            </div>\n            <p className='gameWinnerText'>{gameWinner}</p>\n        </div>\n    );\n}\n\nexport default Scoreboard;","import React from 'react';\nimport PlayerDisplay from './PlayerDisplay';\nimport Scoreboard from './Scoreboard';\nimport '../styles/Header.css';\n\nconst Header = ({ currentPlayer, gameWinner, playerOneScore, playerTwoScore }) => {\n    return (\n        <header>\n            <PlayerDisplay\n                currentPlayer={currentPlayer}\n                player='X'\n                position='left'\n            />\n            <Scoreboard\n                gameWinner={gameWinner}\n                playerOneScore={playerOneScore}\n                playerTwoScore={playerTwoScore}\n            />\n            <PlayerDisplay\n                currentPlayer={!currentPlayer}\n                player='O'\n                position='right'\n            />\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport '../styles/GameSquare.css';\n\nconst GameSquare = ({ onClick, id, value }) => {\n    const handleClick = () => {\n        if (onClick === undefined) {\n            return null;\n        } else {\n            return onClick(id, value);\n        }\n    }\n    return (\n        <div className='gameSquare' onClick={handleClick} square_id={id}>\n            {value}\n        </div>\n    );\n}\n\nexport default GameSquare;","import React, { useEffect } from 'react';\nimport GameSquare from './GameSquare';\nimport '../styles/Gameboard.css';\n\nconst Gameboard = ({ boardData, currentPlayer, gameOver, setBoardData, setCurrentPlayer, startGame }) => {\n    useEffect(() => {\n        checkForWinner();\n    }, [boardData]);\n\n    const checkForWinner = () => {\n        const combos = [\n            [boardData[0].value, boardData[1].value, boardData[2].value],\n            [boardData[3].value, boardData[4].value, boardData[5].value],\n            [boardData[6].value, boardData[7].value, boardData[8].value],\n            [boardData[0].value, boardData[3].value, boardData[6].value],\n            [boardData[1].value, boardData[4].value, boardData[7].value],\n            [boardData[2].value, boardData[5].value, boardData[8].value],\n            [boardData[0].value, boardData[4].value, boardData[8].value],\n            [boardData[2].value, boardData[4].value, boardData[6].value],\n        ];\n\n        combos.forEach(square => {\n            let valueOne = square[0];\n            let valueTwo = square[1];\n            let valueThree = square[2];\n\n            if (valueOne !== null && valueOne === valueTwo && valueTwo === valueThree) {\n                gameOver(valueOne);\n            } else if (checkForTieGame()) {\n                gameOver(null);\n            }\n        })\n    }\n\n    const checkForTieGame = () => {\n        const areSquaresFilled = boardData.every(square => square.value !== null);\n\n        return areSquaresFilled;\n    }\n\n    const placeMarker = (id, value) => {\n        if (value === null) {\n            let updateValue = boardData.map(square => {\n                if (square.id === id) {\n                    return {...square, value: currentPlayer ? 'X' : 'O'};\n                }\n                return square;\n            })\n    \n            setBoardData(updateValue);\n            setCurrentPlayer(!currentPlayer);\n        }\n    };\n\n    const buildSquares = boardData.map(square => {\n        if (startGame) {\n            return <GameSquare key={square.id} onClick={placeMarker} id={square.id} value={square.value} />\n        } else {\n            return <GameSquare key={square.id} value={square.value} />;\n        };\n    });\n\n    return (\n        <div className='gameboard'>\n            {buildSquares}\n        </div>\n    );\n}\n\nexport default Gameboard;","import React from 'react';\n\nconst FormInput = ({ className, labelText, placeholder, setPlayer, type, value}) => {\n    const handleChange = (event) => {\n        setPlayer(event.target.value);\n    }\n\n    return (\n        <label className={className}>\n            {labelText}\n            <input type={type} onChange={handleChange} placeholder={placeholder} value={value} required />\n        </label>\n    );\n}\n\nexport default FormInput;","import React from 'react';\n\nconst Button = ({ onClick, text, type }) => {\n    return (\n        <button type={type} onClick={onClick}>{text}</button>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport FormInput from './FormInput';\nimport Button from './Button';\n\nconst GameForm = ({ playerOne, playerTwo, setPlayerOne, setPlayerTwo, setShowForm, setShowGameReset, setStartGame }) => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setShowForm(false);\n        setShowGameReset(true);\n        setStartGame(true);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <FormInput\n                className='playerLabel'\n                labelText='Player X'\n                placeholder='Enter Player 1'\n                setPlayer={setPlayerOne}\n                type='text'\n                value={playerOne}\n            />\n            <FormInput\n                className='playerLabel'\n                labelText='Player O'\n                placeholder='Enter Player 2'\n                setPlayer={setPlayerTwo}\n                type='text'\n                value={playerTwo}\n            />\n            <Button text='Start!' type='submit' />\n    </form>\n    );\n}\n\nexport default GameForm;","import React from 'react';\nimport Button from './Button';\n\nconst GameReset = ({ resetBoardData, resetScores, setGameWinner, setPlayerOne, setPlayerTwo, setShowForm, setShowGameReset, setStartGame }) => {\n    const handlePlayAgain = () => {\n        setGameWinner('');\n        setStartGame(true);\n        resetBoardData();\n    }\n\n    const handleQuit = () => {\n        resetBoardData();\n        resetScores();\n        setGameWinner('')\n        setPlayerOne('');\n        setPlayerTwo('');\n        setShowForm(true);\n        setShowGameReset(false);\n        setStartGame(false);\n    }\n\n    return (\n        <div className='gameReset'>\n            <Button text='Play Again' onClick={handlePlayAgain} />\n            <Button text='Quit' onClick={handleQuit} />\n        </div>\n    );\n}\n\nexport default GameReset;","import React, { useState } from 'react';\nimport GameForm from './GameForm';\nimport GameReset from './GameReset';\nimport '../styles/ControlBoard.css';\n\nconst ControlBoard = ({ playerOne, playerTwo, resetBoardData, resetScores, setGameWinner, setPlayerOne, setPlayerTwo, setStartGame }) => {\n    const [showForm, setShowForm] = useState(true);\n    const [showGameReset, setShowGameReset] = useState(false);\n\n    return (\n        <div className='controlBoard'>\n            {showForm \n                ?   <GameForm \n                        playerOne={playerOne}\n                        playerTwo={playerTwo}\n                        setPlayerOne={setPlayerOne}\n                        setPlayerTwo={setPlayerTwo}\n                        setShowForm={setShowForm}\n                        setShowGameReset={setShowGameReset}\n                        setStartGame={setStartGame}\n                    />\n                :   null\n            }\n            {showGameReset\n                ?   <GameReset\n                        resetBoardData={resetBoardData}\n                        resetScores={resetScores}\n                        setGameWinner={setGameWinner}\n                        setPlayerOne={setPlayerOne}\n                        setPlayerTwo={setPlayerTwo}\n                        setShowForm={setShowForm}\n                        setShowGameReset={setShowGameReset}\n                        setStartGame={setStartGame}\n                    />\n                :   null\n            }\n        </div>\n    );\n}\n\nexport default ControlBoard;","let squareData = [\n    {\n        id: 1,\n        value: null\n    },\n    {\n        id: 2,\n        value: null\n    },\n    {\n        id: 3,\n        value: null\n    },\n    {\n        id: 4,\n        value: null\n    },\n    {\n        id: 5,\n        value: null\n    },\n    {\n        id: 6,\n        value: null\n    },\n    {\n        id: 7,\n        value: null\n    },\n    {\n        id: 8,\n        value: null\n    },\n    {\n        id: 9,\n        value: null\n    }\n];\n\nexport default squareData;","import React, { useState } from 'react';\nimport Gameboard from './Gameboard';\nimport ControlBoard from './ControlBoard';\nimport squareData from '../squareData';\nimport '../styles/Main.css';\n\nconst Main = ({ currentPlayer, playerOne, playerTwo, resetScores, setCurrentPlayer, setGameWinner, setPlayerOne, setPlayerTwo, updateScore }) => {\n    const [boardData, setBoardData] = useState(squareData);\n    const [startGame, setStartGame] = useState(false);\n\n    const gameOver = (value) => {\n        setStartGame(false);\n\n        if (value === 'X') {\n            setGameWinner(`${playerOne} Wins!`);\n            updateScore(playerOne);\n        } else if (value === 'O') {\n            setGameWinner(`${playerTwo} Wins!`);\n            updateScore(playerTwo);\n        } else if (value === null) {\n            setGameWinner('Tie game, no winners!');\n        }\n    }\n\n    const resetBoardData = () => {\n        setBoardData(squareData);\n    }\n\n    return (\n        <main>\n            <h1 className='gameTitle'>Tic-Tac-Toe</h1>\n            <Gameboard\n                boardData={boardData}\n                currentPlayer={currentPlayer}\n                setBoardData={setBoardData}\n                setCurrentPlayer={setCurrentPlayer}\n                gameOver={gameOver}\n                startGame={startGame}\n            />\n            <ControlBoard\n                playerOne={playerOne}\n                playerTwo={playerTwo}\n                resetBoardData={resetBoardData}\n                resetScores={resetScores}\n                setGameWinner={setGameWinner}\n                setPlayerOne={setPlayerOne}\n                setPlayerTwo={setPlayerTwo}\n                setStartGame={setStartGame}\n            />\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport '../styles/Footer.css';\n\nconst Footer = ({ address, name, text }) => {\n    return (\n        <footer>\n            <small>{text}<a href={address} target='_blank' rel='noreferrer'>{name}</a></small>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport './styles/App.css';\n\nconst App = () => {\n  const [currentPlayer, setCurrentPlayer] = useState(true);\n  const [gameWinner, setGameWinner] = useState('');\n  const [playerOne, setPlayerOne] = useState('');\n  const [playerTwo, setPlayerTwo] = useState('');\n  const [playerOneScore, setPlayerOneScore] = useState(0);\n  const [playerTwoScore, setPlayerTwoScore] = useState(0);\n\n  const resetScores = () => {\n    setPlayerOneScore(0)\n    setPlayerTwoScore(0);\n  }\n\n  const updateScore = (winner) => {\n    if (winner === playerOne) {\n      setPlayerOneScore(playerOneScore + 1);\n    } else if (winner === playerTwo) {\n      setPlayerTwoScore(playerTwoScore + 1);\n    }\n  }\n\n  return (\n    <div className='app'>\n      <Header\n        currentPlayer={currentPlayer}\n        gameWinner={gameWinner}\n        playerOneScore={playerOneScore}\n        playerTwoScore={playerTwoScore}\n      />\n      <Main\n        currentPlayer={currentPlayer}\n        playerOne={playerOne}\n        playerTwo={playerTwo}\n        resetScores={resetScores}\n        setCurrentPlayer={setCurrentPlayer}\n        setGameWinner={setGameWinner}\n        setPlayerOne={setPlayerOne}\n        setPlayerTwo={setPlayerTwo}\n        updateScore={updateScore}\n      />\n      <Footer\n        address='https://github.com/robisonwebdev'\n        name='David Robison'\n        text='Developed by '\n      />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}